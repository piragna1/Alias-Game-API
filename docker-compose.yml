version: "3.9"
services:
  alias_db:
    image: postgres:16-alpine
    container_name: postgres_alias_db
    restart: always
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: password
      POSTGRES_DB: alias_db
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbuser -d alias_db"]
      interval: 5s
      timeout: 5s
      retries: 5
  # Nota: se expone el puerto 5433 en el host en lugar del 5432
  # porque en algunos entornos de desarrollo puede estar corriendo una
  # instancia local de PostgreSQL fuera de Docker (por ejemplo, instalada por el sistema).

  # Docker sigue usando el puerto interno 5432 dentro del contenedor (el estándar de PostgreSQL),
  # pero se mapea al 5433 en la máquina host para evitar conflictos.

  # en .env DB_PORT=5433

  # proximamente
  #     volumes:
  #       - postgres_data:/var/lib/postgresql/data
  #     networks:
  #       - alias_network

  # networks:
  #   alias_network:
  #     driver: bridge

  # volumes:
  #   postgres_data:
  redis:
    image: redis:7-alpine
    container_name: redis_alias
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  app:
    build: .
    restart: always
    environment:
      DB_USER: dbuser
      DB_PASSWORD: password
      DB_NAME: alias_db
      DB_HOST: alias_db
      DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ADMIN_EMAIL: admin@alias.com
      ADMIN_PASSWORD: adminpassword
    depends_on:
      alias_db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
volumes:
  redis_data:
